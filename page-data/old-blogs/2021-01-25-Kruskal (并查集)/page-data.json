{"componentChunkName":"component---src-components-posts-post-template-index-js","path":"/old-blogs/2021-01-25-Kruskal (并查集)/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Kruskal算法\",\n  \"subtitle\": \"基于并查集实现的最小生成树算法\",\n  \"date\": \"2021-01-25T00:00:00.000Z\",\n  \"update_date\": \"2021-01-25T00:00:00.000Z\",\n  \"author\": \"pfan8\",\n  \"header-img\": \"img/post-bg-dsa.jpg\",\n  \"catalog\": true,\n  \"tags\": [\"Algorithm-Graph\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"引用说明\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%BC%95%E7%94%A8%E8%AF%B4%E6%98%8E\",\n    \"aria-label\": \"引用说明 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%BC%95%E7%94%A8%E8%AF%B4%E6%98%8E\",\n    \"aria-label\": \"引用说明 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u5F15\\u7528\\u8BF4\\u660E\"), mdx(\"p\", null, \"  \\u672C\\u6587\\u53C2\\u8003\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.csdn.net/luomingjun12315/article/details/47700237\"\n  }, \"\\u535A\\u5BA2\"), \"\\uFF0C\\u5728\\u6B64\\u57FA\\u7840\\u4E0A\\u8FDB\\u884C\\u603B\\u7ED3\\u63D0\\u70BC\"), mdx(\"h2\", {\n    \"id\": \"前言\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%89%8D%E8%A8%80\",\n    \"aria-label\": \"前言 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%89%8D%E8%A8%80\",\n    \"aria-label\": \"前言 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u524D\\u8A00\"), mdx(\"p\", null, \"  \", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u7ED9\\u5B9A\\u4E00\\u4E2A\\u65E0\\u5411\\u56FE\\uFF0C\\u5982\\u679C\\u5B83\\u4EFB\\u610F\\u4E24\\u4E2A\\u9876\\u70B9\\u90FD\\u8054\\u901A\\u5E76\\u4E14\\u662F\\u4E00\\u68F5\\u6811\\uFF0C\\u90A3\\u4E48\\u6211\\u4EEC\\u5C31\\u79F0\\u4E4B\\u4E3A\\u751F\\u6210\\u6811(Spanning Tree)\\u3002\\u5982\\u679C\\u662F\\u5E26\\u6743\\u503C\\u7684\\u65E0\\u5411\\u56FE\\uFF0C\\u90A3\\u4E48\\u6743\\u503C\\u4E4B\\u548C\\u6700\\u5C0F\\u7684\\u751F\\u6210\\u6811\\uFF0C\\u6211\\u4EEC\\u5C31\\u79F0\\u4E4B\\u4E3A\\u6700\\u5C0F\\u751F\\u6210\\u6811(MST, Minimum Spanning Tree)\\u3002\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://thumbsnap.com/i/7YGGuU9Q.png?0125\",\n    \"alt\": null\n  }), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u6211\\u4EEC\\u7531\\u6700\\u5C0F\\u751F\\u6210\\u6811\\u7684\\u5B9A\\u4E49\\uFF0C\\u53EF\\u4EE5\\u5EF6\\u4F38\\u51FA\\u4E00\\u4E2A\\u4FEE\\u5EFA\\u9053\\u8DEF\\u7684\\u95EE\\u9898\\uFF1A\\u628A\\u65E0\\u5411\\u56FE\\u7684\\u6BCF\\u4E2A\\u9876\\u70B9\\u770B\\u4F5C\\u6751\\u5E84\\uFF0C\\u8BA1\\u5212\\u4FEE\\u5EFA\\u9053\\u8DEF\\u4F7F\\u5F97\\u53EF\\u4EE5\\u5728\\u6240\\u6709\\u6751\\u5E84\\u4E4B\\u95F4\\u901A\\u884C\\u3002\\u628A\\u6BCF\\u4E2A\\u6751\\u5E84\\u4E4B\\u95F4\\u4FEE\\u5EFA\\u9053\\u8DEF\\u7684\\u8D39\\u7528\\u770B\\u4F5C\\u6743\\u503C\\uFF0C\\u90A3\\u4E48\\u6211\\u4EEC\\u5C31\\u53EF\\u4EE5\\u5F97\\u5230\\u4E00\\u4E2A\\u6C42\\u89E3\\u4FEE\\u5EFA\\u9053\\u8DEF\\u7684\\u6700\\u5C0F\\u8D39\\u7528\\u7684\\u95EE\\u9898\\u3002\"), mdx(\"p\", null, \"  \", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u5E38\\u89C1\\u6C42\\u89E3\\u6700\\u5C0F\\u751F\\u6210\\u6811\\u7684\\u7B97\\u6CD5\\u6709Kruskal\\u7B97\\u6CD5\\u548CPrim\\u7B97\\u6CD5\\u3002\\u7531\\u4E8E\\u7BC7\\u5E45\\u95EE\\u9898\\u518D\\u6B64\\u5BF9\\u4E8EPrim\\u7B97\\u6CD5\\uFF0C\\u5C31\\u4E0D\\u591A\\u505A\\u89E3\\u91CA\\u4E86\\u3002\\u73B0\\u5728\\u6211\\u4EEC\\u770B\\u770BKruskal\\u7B97\\u6CD5\\uFF0C\\u662F\\u600E\\u4E48\\u6765\\u6C42\\u89E3\\u6700\\u5C0F\\u751F\\u6210\\u6811\\u7684\\u95EE\\u9898\\u3002\"), mdx(\"h2\", {\n    \"id\": \"一、kruska-算法描述\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%B8%80%E3%80%81kruska-%E7%AE%97%E6%B3%95%E6%8F%8F%E8%BF%B0\",\n    \"aria-label\": \"一、kruska 算法描述 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%B8%80%E3%80%81kruska-%E7%AE%97%E6%B3%95%E6%8F%8F%E8%BF%B0\",\n    \"aria-label\": \"一、kruska 算法描述 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u4E00\\u3001Kruska \\u7B97\\u6CD5\\u63CF\\u8FF0\"), mdx(\"p\", null, \"  \", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"Kruskal\\u7B97\\u6CD5\\u662F\\u57FA\\u4E8E\\u8D2A\\u5FC3\\u7684\\u601D\\u60F3\\u5F97\\u5230\\u7684\\u3002\\u9996\\u5148\\u6211\\u4EEC\\u628A\\u6240\\u6709\\u7684\\u8FB9\\u6309\\u7167\\u6743\\u503C\\u5148\\u4ECE\\u5C0F\\u5230\\u5927\\u6392\\u5217\\uFF0C\\u63A5\\u7740\\u6309\\u7167\\u987A\\u5E8F\\u9009\\u53D6\\u6BCF\\u6761\\u8FB9\\uFF0C\\u5982\\u679C\\u8FD9\\u6761\\u8FB9\\u7684\\u4E24\\u4E2A\\u7AEF\\u70B9\\u4E0D\\u5C5E\\u4E8E\\u540C\\u4E00\\u96C6\\u5408\\uFF0C\\u90A3\\u4E48\\u5C31\\u5C06\\u5B83\\u4EEC\\u5408\\u5E76\\uFF0C\\u76F4\\u5230\\u6240\\u6709\\u7684\\u70B9\\u90FD\\u5C5E\\u4E8E\\u540C\\u4E00\\u4E2A\\u96C6\\u5408\\u4E3A\\u6B62\\u3002\\u81F3\\u4E8E\\u600E\\u4E48\\u5408\\u5E76\\u5230\\u4E00\\u4E2A\\u96C6\\u5408\\uFF0C\\u90A3\\u4E48\\u8FD9\\u91CC\\u6211\\u4EEC\\u5C31\\u53EF\\u4EE5\\u7528\\u5230\\u4E00\\u4E2A\\u5DE5\\u5177\\u2014\\u2014-\\u5E76\\u67E5\\u96C6\\u3002\\u6362\\u800C\\u8A00\\u4E4B\\uFF0CKruskal\\u7B97\\u6CD5\\u5C31\\u662F\\u57FA\\u4E8E\\u5E76\\u67E5\\u96C6\\u7684\\u8D2A\\u5FC3\\u7B97\\u6CD5\\u3002\"), mdx(\"p\", null, \"  \\u5BF9\\u4E8E\\u56FEG(V,E)\\uFF0C\\u4EE5\\u4E0B\\u662F\\u7B97\\u6CD5\\u63CF\\u8FF0\\uFF1A\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u8F93\\u5165\\uFF1A \\u56FEG\\n\\u8F93\\u51FA\\uFF1A \\u56FEG\\u7684\\u6700\\u5C0F\\u751F\\u6210\\u6811\\n\\u5177\\u4F53\\u6D41\\u7A0B\\uFF1A\\n(1) \\u5C06\\u56FEG\\u770B\\u505A\\u4E00\\u4E2A\\u68EE\\u6797\\uFF0C\\u6BCF\\u4E2A\\u9876\\u70B9\\u4E3A\\u4E00\\u68F5\\u72EC\\u7ACB\\u7684\\u6811\\n(2) \\u5C06\\u6240\\u6709\\u7684\\u8FB9\\u52A0\\u5165\\u96C6\\u5408S\\uFF0C\\u5373\\u4E00\\u5F00\\u59CBS = E\\n(3) \\u4ECES\\u4E2D\\u62FF\\u51FA\\u4E00\\u6761\\u6700\\u77ED\\u7684\\u8FB9(u,v)\\uFF0C\\u5982\\u679C(u,v)\\u4E0D\\u5728\\u540C\\u4E00\\u68F5\\u6811\\u5185\\uFF0C\\u5219\\u8FDE\\u63A5u,v\\u5408\\u5E76\\u8FD9\\u4E24\\u68F5\\u6811\\uFF0C\\u540C\\u65F6\\u5C06(u,v)\\u52A0\\u5165\\u751F\\u6210\\u6811\\u7684\\u8FB9\\u96C6E'\\n(4) \\u91CD\\u590D(3)\\u76F4\\u5230\\u6240\\u6709\\u70B9\\u5C5E\\u4E8E\\u540C\\u4E00\\u68F5\\u6811\\uFF0C\\u8FB9\\u96C6E'\\u5C31\\u662F\\u4E00\\u68F5\\u6700\\u5C0F\\u751F\\u6210\\u6811\")), mdx(\"p\", null, \"  \\u6211\\u4EEC\\u7528\\u73B0\\u5728\\u6765\\u6A21\\u62DF\\u4E00\\u4E0BKruskal\\u7B97\\u6CD5\\uFF0C\\u4E0B\\u9762\\u7ED9\\u51FA\\u4E00\\u4E2A\\u65E0\\u5411\\u56FEB,\\u6211\\u4EEC\\u4F7F\\u7528Kruskal\\u6765\\u627E\\u65E0\\u5411\\u56FEB\\u7684\\u6700\\u5C0F\\u751F\\u6210\\u6811\\u3002\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://thumbsnap.com/i/BrTAHkab.jpg?0125\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"  \\u9996\\u5148\\uFF0C\\u6211\\u4EEC\\u5C06\\u6240\\u6709\\u7684\\u8FB9\\u90FD\\u8FDB\\u884C\\u4ECE\\u5C0F\\u5230\\u5927\\u7684\\u6392\\u5E8F\\u3002\\u6392\\u5E8F\\u4E4B\\u540E\\u6839\\u636E\\u8D2A\\u5FC3\\u51C6\\u5219\\uFF0C\\u6211\\u4EEC\\u9009\\u53D6\\u6700\\u5C0F\\u8FB9(A,D)\\u3002\\u6211\\u4EEC\\u53D1\\u73B0\\u9876\\u70B9A,D\\u4E0D\\u5728\\u4E00\\u68F5\\u6811\\u4E0A\\uFF0C\\u6240\\u4EE5\\u5408\\u5E76\\u9876\\u70B9A,D\\u6240\\u5728\\u7684\\u6811\\uFF0C\\u5E76\\u5C06\\u8FB9(A,D)\\u52A0\\u5165\\u8FB9\\u96C6E\\u2018\\u3002\"), mdx(\"p\", null, \"  \", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://thumbsnap.com/i/mvNTew8Z.jpg?0125\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"   \\u6211\\u4EEC\\u63A5\\u7740\\u5728\\u5269\\u4E0B\\u7684\\u8FB9\\u4E2D\\u67E5\\u627E\\u6743\\u503C\\u6700\\u5C0F\\u7684\\u8FB9\\uFF0C\\u4E8E\\u662F\\u6211\\u4EEC\\u627E\\u5230\\u7684(C,E)\\u3002\\u6211\\u4EEC\\u53EF\\u4EE5\\u53D1\\u73B0\\uFF0C\\u9876\\u70B9C,E\\u4ECD\\u7136\\u4E0D\\u5728\\u4E00\\u68F5\\u6811\\u4E0A\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u5408\\u5E76\\u9876\\u70B9C\\uFF0CE\\u6240\\u5728\\u7684\\u6811\\uFF0C\\u5E76\\u5C06\\u8FB9(C,E)\\u52A0\\u5165\\u8FB9\\u96C6E'\"), mdx(\"p\", null, \"   \", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://thumbsnap.com/i/6S4Z1uey.jpg?0125\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"   \\u4E0D\\u65AD\\u91CD\\u590D\\u4E0A\\u8FF0\\u7684\\u8FC7\\u7A0B\\uFF0C\\u4E8E\\u662F\\u6211\\u4EEC\\u5C31\\u627E\\u5230\\u4E86\\u65E0\\u5411\\u56FEB\\u7684\\u6700\\u5C0F\\u751F\\u6210\\u6811\\uFF0C\\u5982\\u4E0B\\u56FE\\u6240\\u793A\\uFF1A\"), mdx(\"p\", null, \"   \", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://thumbsnap.com/i/QfdLcpui.jpg?0125\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"   \\u5224\\u65AD\\u5F53\\u8FB9\\u6570\\u91CF == \\u8282\\u70B9\\u6570\\u91CF-1 \\u65F6\\uFF0C\\u8BF4\\u660E\\u5DF2\\u7ECF\\u751F\\u6210\\u6700\\u5C0F\\u751F\\u6210\\u6811\"), mdx(\"h2\", {\n    \"id\": \"二、kruska-时间复杂度分析\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%BA%8C%E3%80%81kruska-%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\",\n    \"aria-label\": \"二、kruska 时间复杂度分析 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%BA%8C%E3%80%81kruska-%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\",\n    \"aria-label\": \"二、kruska 时间复杂度分析 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u4E8C\\u3001Kruska \\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u5206\\u6790\"), mdx(\"p\", null, \"  \", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"Kruskal\\u7B97\\u6CD5\\u6BCF\\u6B21\\u8981\\u4ECE\\u90FD\\u8981\\u4ECE\\u5269\\u4F59\\u7684\\u8FB9\\u4E2D\\u9009\\u53D6\\u4E00\\u4E2A\\u6700\\u5C0F\\u7684\\u8FB9\\u3002\\u901A\\u5E38\\u6211\\u4EEC\\u8981\\u5148\\u5BF9\\u8FB9\\u6309\\u6743\\u503C\\u4ECE\\u5C0F\\u5230\\u5927\\u6392\\u5E8F\\uFF0C\\u8FD9\\u4E00\\u6B65\\u7684\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u4E3A\\u4E3A\", mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"inlineMath\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-mathml\"\n  }, mdx(\"math\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }, mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"O\"), mdx(\"mo\", {\n    parentName: \"mrow\",\n    \"stretchy\": \"false\"\n  }, \"(\"), mdx(\"mi\", {\n    parentName: \"mrow\",\n    \"mathvariant\": \"normal\"\n  }, \"\\u2223\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"E\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"l\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"o\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"g\"), mdx(\"mi\", {\n    parentName: \"mrow\",\n    \"mathvariant\": \"normal\"\n  }, \"\\u2223\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"E\"), mdx(\"mi\", {\n    parentName: \"mrow\",\n    \"mathvariant\": \"normal\"\n  }, \"\\u2223\"), mdx(\"mo\", {\n    parentName: \"mrow\",\n    \"stretchy\": \"false\"\n  }, \")\")), mdx(\"annotation\", {\n    parentName: \"semantics\",\n    \"encoding\": \"application/x-tex\"\n  }, \"O(|Elog|E|)\")))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"1em\",\n      \"verticalAlign\": \"-0.25em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.02778em\"\n    }\n  }, \"O\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mopen\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"\\u2223\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.05764em\"\n    }\n  }, \"E\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.01968em\"\n    }\n  }, \"l\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\"\n  }, \"o\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.03588em\"\n    }\n  }, \"g\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"\\u2223\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.05764em\"\n    }\n  }, \"E\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"\\u2223\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mclose\"\n  }, \")\"))))), \"\\u3002Kruskal\\u7B97\\u6CD5\\u7684\\u5B9E\\u73B0\\u901A\\u5E38\\u4F7F\\u7528\\u5E76\\u67E5\\u96C6\\uFF0C\\u6765\\u5FEB\\u901F\\u5224\\u65AD\\u4E24\\u4E2A\\u9876\\u70B9\\u662F\\u5426\\u5C5E\\u4E8E\\u540C\\u4E00\\u4E2A\\u96C6\\u5408\\u3002\\u6700\\u574F\\u7684\\u60C5\\u51B5\\u53EF\\u80FD\\u8981\\u679A\\u4E3E\\u5B8C\\u6240\\u6709\\u7684\\u8FB9\\uFF0C\\u6B64\\u65F6\\u8981\\u5FAA\\u73AF\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"|E|\"), \"\\u6B21\\uFF0C\\u6240\\u4EE5\\u8FD9\\u4E00\\u6B65\\u7684\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u4E3A\", mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"inlineMath\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-mathml\"\n  }, mdx(\"math\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }, mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"O\"), mdx(\"mo\", {\n    parentName: \"mrow\",\n    \"stretchy\": \"false\"\n  }, \"(\"), mdx(\"mi\", {\n    parentName: \"mrow\",\n    \"mathvariant\": \"normal\"\n  }, \"\\u2223\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"E\"), mdx(\"mi\", {\n    parentName: \"mrow\",\n    \"mathvariant\": \"normal\"\n  }, \"\\u2223\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"\\u03B1\"), mdx(\"mo\", {\n    parentName: \"mrow\",\n    \"stretchy\": \"false\"\n  }, \"(\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"V\"), mdx(\"mo\", {\n    parentName: \"mrow\",\n    \"stretchy\": \"false\"\n  }, \")\"), mdx(\"mo\", {\n    parentName: \"mrow\",\n    \"stretchy\": \"false\"\n  }, \")\")), mdx(\"annotation\", {\n    parentName: \"semantics\",\n    \"encoding\": \"application/x-tex\"\n  }, \"O(|E|\\u03B1(V))\")))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"1em\",\n      \"verticalAlign\": \"-0.25em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.02778em\"\n    }\n  }, \"O\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mopen\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"\\u2223\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.05764em\"\n    }\n  }, \"E\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"\\u2223\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.0037em\"\n    }\n  }, \"\\u03B1\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mopen\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.22222em\"\n    }\n  }, \"V\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mclose\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mclose\"\n  }, \")\"))))), \"\\uFF0C\\u5176\\u4E2D\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u03B1\"), \"\\u4E3AAckermann\\u51FD\\u6570\\uFF0C\\u5176\\u589E\\u957F\\u975E\\u5E38\\u6162\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u89C6\\u4E3A\\u5E38\\u6570\\u3002\\u6240\\u4EE5Kruskal\\u7B97\\u6CD5\\u7684\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u4E3A\", mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"inlineMath\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-mathml\"\n  }, mdx(\"math\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }, mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"O\"), mdx(\"mo\", {\n    parentName: \"mrow\",\n    \"stretchy\": \"false\"\n  }, \"(\"), mdx(\"mi\", {\n    parentName: \"mrow\",\n    \"mathvariant\": \"normal\"\n  }, \"\\u2223\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"E\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"l\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"o\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"g\"), mdx(\"mi\", {\n    parentName: \"mrow\",\n    \"mathvariant\": \"normal\"\n  }, \"\\u2223\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"E\"), mdx(\"mi\", {\n    parentName: \"mrow\",\n    \"mathvariant\": \"normal\"\n  }, \"\\u2223\"), mdx(\"mo\", {\n    parentName: \"mrow\",\n    \"stretchy\": \"false\"\n  }, \")\")), mdx(\"annotation\", {\n    parentName: \"semantics\",\n    \"encoding\": \"application/x-tex\"\n  }, \"O(|Elog|E|)\")))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"1em\",\n      \"verticalAlign\": \"-0.25em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.02778em\"\n    }\n  }, \"O\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mopen\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"\\u2223\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.05764em\"\n    }\n  }, \"E\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.01968em\"\n    }\n  }, \"l\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\"\n  }, \"o\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.03588em\"\n    }\n  }, \"g\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"\\u2223\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\",\n    \"style\": {\n      \"marginRight\": \"0.05764em\"\n    }\n  }, \"E\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"\\u2223\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mclose\"\n  }, \")\"))))), \"\\u3002\"), mdx(\"h2\", {\n    \"id\": \"三、实战\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%B8%89%E3%80%81%E5%AE%9E%E6%88%98\",\n    \"aria-label\": \"三、实战 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%B8%89%E3%80%81%E5%AE%9E%E6%88%98\",\n    \"aria-label\": \"三、实战 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u4E09\\u3001\\u5B9E\\u6218\"), mdx(\"h3\", {\n    \"id\": \"1畅通工程\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B\",\n    \"aria-label\": \"1畅通工程 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B\",\n    \"aria-label\": \"1畅通工程 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1.\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"http://acm.hdu.edu.cn/showproblem.php?pid=1863\"\n  }, \"\\u7545\\u901A\\u5DE5\\u7A0B\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"#include <cstdio>\\n#include <cstdlib>\\n#define MAXN 10000 + 10\\nusing namespace std;\\n \\nint par[MAXN], Rank[MAXN];\\ntypedef struct{\\n    int a, b, price;\\n}Node;\\nNode a[MAXN];\\n \\nint cmp(const void*a, const void *b){\\n    return ((Node*)a)->price - ((Node*)b)->price;\\n}\\nvoid Init(int n){\\n    for(int i = 0; i < n; i++){\\n        Rank[i] = 0;\\n        par[i] = i;\\n    }\\n}\\n \\nint find(int x){\\n    int root = x;\\n    while(root != par[root]) root = par[root];\\n    while(x != root){\\n        int t = par[x];\\n        par[x] = root;\\n        x = t;\\n    }\\n    return root;\\n}\\n \\nvoid unite(int x, int y){\\n    x = find(x);\\n    y = find(y);\\n    if(Rank[x] < Rank[y]){\\n        par[x] = y;\\n    }\\n    else{\\n        par[y] = x;\\n        if(Rank[x] == Rank[y]) Rank[x]++;\\n    }\\n}\\n//n\\u4E3A\\u8FB9\\u7684\\u6570\\u91CF\\uFF0Cm\\u4E3A\\u6751\\u5E84\\u7684\\u6570\\u91CF\\nint Kruskal(int n, int m){\\n    int nEdge = 0, res = 0;\\n    //\\u5C06\\u8FB9\\u6309\\u7167\\u6743\\u503C\\u4ECE\\u5C0F\\u5230\\u5927\\u6392\\u5E8F\\n    qsort(a, n, sizeof(a[0]), cmp);\\n    for(int i = 0; i < n && nEdge != m - 1; i++){\\n        //\\u5224\\u65AD\\u5F53\\u524D\\u8FD9\\u6761\\u8FB9\\u7684\\u4E24\\u4E2A\\u7AEF\\u70B9\\u662F\\u5426\\u5C5E\\u4E8E\\u540C\\u4E00\\u68F5\\u6811\\n        if(find(a[i].a) != find(a[i].b)){\\n            unite(a[i].a, a[i].b);\\n            res += a[i].price;\\n            nEdge++;\\n        }\\n    }\\n    //\\u5982\\u679C\\u52A0\\u5165\\u8FB9\\u7684\\u6570\\u91CF\\u5C0F\\u4E8Em - 1,\\u5219\\u8868\\u660E\\u8BE5\\u65E0\\u5411\\u56FE\\u4E0D\\u8FDE\\u901A,\\u7B49\\u4EF7\\u4E8E\\u4E0D\\u5B58\\u5728\\u6700\\u5C0F\\u751F\\u6210\\u6811\\n    if(nEdge < m-1) res = -1;\\n    return res;\\n}\\nint main(){\\n    int n, m, ans;\\n    while(scanf(\\\"%d%d\\\", &n, &m), n){\\n        Init(m);\\n        for(int i = 0; i < n; i++){\\n            scanf(\\\"%d%d%d\\\", &a[i].a, &a[i].b, &a[i].price);\\n            //\\u5C06\\u6751\\u5E84\\u7F16\\u53F7\\u53D8\\u4E3A0~m-1\\uFF08\\u8FD9\\u4E2A\\u4EC5\\u4EC5\\u53EA\\u662F\\u4E2A\\u4EBA\\u4E60\\u60EF\\uFF0C\\u5E76\\u975E\\u5FC5\\u8981\\u7684\\uFF09\\n            a[i].a--;\\n            a[i].b--;\\n        }\\n        ans = Kruskal(n, m);\\n        if(ans == -1) printf(\\\"?\\\\n\\\");\\n        else printf(\\\"%d\\\\n\\\", ans);\\n    }\\n    return 0;\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2找关键边和伪关键边\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2%E6%89%BE%E5%85%B3%E9%94%AE%E8%BE%B9%E5%92%8C%E4%BC%AA%E5%85%B3%E9%94%AE%E8%BE%B9\",\n    \"aria-label\": \"2找关键边和伪关键边 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2%E6%89%BE%E5%85%B3%E9%94%AE%E8%BE%B9%E5%92%8C%E4%BC%AA%E5%85%B3%E9%94%AE%E8%BE%B9\",\n    \"aria-label\": \"2找关键边和伪关键边 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2.\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://leetcode-cn.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/\"\n  }, \"\\u627E\\u5173\\u952E\\u8FB9\\u548C\\u4F2A\\u5173\\u952E\\u8FB9\")), mdx(\"p\", null, \"\\u8FD9\\u9053\\u9898\\u57FA\\u4E8E Kruskal \\u7B97\\u6CD5\\uFF0C\\u901A\\u8FC7 Kruskal \\u5904\\u7406\\u4E4B\\u540E\\uFF0C\\u6709\\u4E24\\u79CD\\u89E3\\u6CD5\\uFF1A\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u679A\\u4E3E\\u6BCF\\u4E00\\u6761\\u8FB9\\u7684\\u60C5\\u51B5\\uFF0C\\u5224\\u65AD\\u662F\\u5173\\u952E\\u8FB9\\u8FD8\\u662F\\u4F2A\\u5173\\u952E\\u8FB9\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u901A\\u8FC7 Tarjan \\u7B97\\u6CD5\\uFF0C\\u66F4\\u5FEB\\u5730\\u5F97\\u5230\\u5173\\u952E\\u8FB9\\u548C\\u4F2A\\u5173\\u952E\\u8FB9\\uFF08\\u5173\\u4E8E Tarjan \\u7B97\\u6CD5\\u8FD9\\u91CC\\u4E0D\\u518D\\u8D58\\u8FF0\\uFF0C\\u611F\\u5174\\u8DA3\\u53EF\\u81EA\\u884C\\u7814\\u7A76\\uFF0C\\u6216\\u70B9\\u51FB\\u4E0B\\u65B9\\u4EE3\\u7801\\u94FE\\u63A5\\u67E5\\u770B LeetCode \\u5B98\\u65B9\\u5206\\u6790\\uFF09\")), mdx(\"p\", null, \"\\u7B2C\\u4E00\\u79CD\\u679A\\u4E3E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"// \\u5E76\\u67E5\\u96C6\\u6A21\\u677F\\nclass UnionFind {\\npublic:\\n    vector<int> parent;\\n    vector<int> size;\\n    int n;\\n    // \\u5F53\\u524D\\u8FDE\\u901A\\u5206\\u91CF\\u6570\\u76EE\\n    int setCount;\\n    \\npublic:\\n    UnionFind(int _n): n(_n), setCount(_n), parent(_n), size(_n, 1) {\\n        iota(parent.begin(), parent.end(), 0);\\n    }\\n    \\n    int findset(int x) {\\n        return parent[x] == x ? x : parent[x] = findset(parent[x]);\\n    }\\n    \\n    bool unite(int x, int y) {\\n        x = findset(x);\\n        y = findset(y);\\n        if (x == y) {\\n            return false;\\n        }\\n        if (size[x] < size[y]) {\\n            swap(x, y);\\n        }\\n        parent[y] = x;\\n        size[x] += size[y];\\n        --setCount;\\n        return true;\\n    }\\n    \\n    bool connected(int x, int y) {\\n        x = findset(x);\\n        y = findset(y);\\n        return x == y;\\n    }\\n};\\n\\nclass Solution {\\npublic:\\n    vector<vector<int>> findCriticalAndPseudoCriticalEdges(int n, vector<vector<int>>& edges) {\\n        int m = edges.size();\\n        for (int i = 0; i < m; ++i) {\\n            edges[i].push_back(i);\\n        }\\n        sort(edges.begin(), edges.end(), [](const auto& u, const auto& v) {\\n            return u[2] < v[2];\\n        });\\n\\n        // \\u8BA1\\u7B97 value\\n        UnionFind uf_std(n);\\n        int value = 0;\\n        for (int i = 0; i < m; ++i) {\\n            if (uf_std.unite(edges[i][0], edges[i][1])) {\\n                value += edges[i][2];\\n            }\\n        }\\n\\n        vector<vector<int>> ans(2);\\n        \\n        for (int i = 0; i < m; ++i) {\\n            // \\u5224\\u65AD\\u662F\\u5426\\u662F\\u5173\\u952E\\u8FB9\\n            UnionFind uf(n);\\n            int v = 0;\\n            for (int j = 0; j < m; ++j) {\\n                if (i != j && uf.unite(edges[j][0], edges[j][1])) {\\n                    v += edges[j][2];\\n                }\\n            }\\n            if (uf.setCount != 1 || (uf.setCount == 1 && v > value)) {\\n                ans[0].push_back(edges[i][3]);\\n                continue;\\n            }\\n\\n            // \\u5224\\u65AD\\u662F\\u5426\\u662F\\u4F2A\\u5173\\u952E\\u8FB9\\n            uf = UnionFind(n);\\n            uf.unite(edges[i][0], edges[i][1]);\\n            v = edges[i][2];\\n            for (int j = 0; j < m; ++j) {\\n                if (i != j && uf.unite(edges[j][0], edges[j][1])) {\\n                    v += edges[j][2];\\n                }\\n            }\\n            if (v == value) {\\n                ans[1].push_back(edges[i][3]);\\n            }\\n        }\\n      \\n        return ans;\\n    }\\n};// \\u5E76\\u67E5\\u96C6\\u6A21\\u677F\\nclass UnionFind {\\npublic:\\n    vector<int> parent;\\n    vector<int> size;\\n    int n;\\n    // \\u5F53\\u524D\\u8FDE\\u901A\\u5206\\u91CF\\u6570\\u76EE\\n    int setCount;\\n    \\npublic:\\n    UnionFind(int _n): n(_n), setCount(_n), parent(_n), size(_n, 1) {\\n        iota(parent.begin(), parent.end(), 0);\\n    }\\n    \\n    int findset(int x) {\\n        return parent[x] == x ? x : parent[x] = findset(parent[x]);\\n    }\\n    \\n    bool unite(int x, int y) {\\n        x = findset(x);\\n        y = findset(y);\\n        if (x == y) {\\n            return false;\\n        }\\n        if (size[x] < size[y]) {\\n            swap(x, y);\\n        }\\n        parent[y] = x;\\n        size[x] += size[y];\\n        --setCount;\\n        return true;\\n    }\\n    \\n    bool connected(int x, int y) {\\n        x = findset(x);\\n        y = findset(y);\\n        return x == y;\\n    }\\n};\\n\\nclass Solution {\\npublic:\\n    vector<vector<int>> findCriticalAndPseudoCriticalEdges(int n, vector<vector<int>>& edges) {\\n        int m = edges.size();\\n        for (int i = 0; i < m; ++i) {\\n            edges[i].push_back(i);\\n        }\\n        sort(edges.begin(), edges.end(), [](const auto& u, const auto& v) {\\n            return u[2] < v[2];\\n        });\\n\\n        // \\u8BA1\\u7B97 value\\n        UnionFind uf_std(n);\\n        int value = 0;\\n        for (int i = 0; i < m; ++i) {\\n            if (uf_std.unite(edges[i][0], edges[i][1])) {\\n                value += edges[i][2];\\n            }\\n        }\\n\\n        vector<vector<int>> ans(2);\\n        \\n        for (int i = 0; i < m; ++i) {\\n            // \\u5224\\u65AD\\u662F\\u5426\\u662F\\u5173\\u952E\\u8FB9\\n            UnionFind uf(n);\\n            int v = 0;\\n            for (int j = 0; j < m; ++j) {\\n                if (i != j && uf.unite(edges[j][0], edges[j][1])) {\\n                    v += edges[j][2];\\n                }\\n            }\\n            if (uf.setCount != 1 || (uf.setCount == 1 && v > value)) {\\n                ans[0].push_back(edges[i][3]);\\n                continue;\\n            }\\n\\n            // \\u5224\\u65AD\\u662F\\u5426\\u662F\\u4F2A\\u5173\\u952E\\u8FB9\\n            uf = UnionFind(n);\\n            uf.unite(edges[i][0], edges[i][1]);\\n            v = edges[i][2];\\n            for (int j = 0; j < m; ++j) {\\n                if (i != j && uf.unite(edges[j][0], edges[j][1])) {\\n                    v += edges[j][2];\\n                }\\n            }\\n            if (v == value) {\\n                ans[1].push_back(edges[i][3]);\\n            }\\n        }\\n      \\n        return ans;\\n    }\\n};\\n\\u4F5C\\u8005\\uFF1ALeetCode-Solution\\n\\u94FE\\u63A5\\uFF1Ahttps://leetcode-cn.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/solution/zhao-dao-zui-xiao-sheng-cheng-shu-li-de-gu57q/\\n\\u6765\\u6E90\\uFF1A\\u529B\\u6263\\uFF08LeetCode\\uFF09\\n\\u8457\\u4F5C\\u6743\\u5F52\\u4F5C\\u8005\\u6240\\u6709\\u3002\\u5546\\u4E1A\\u8F6C\\u8F7D\\u8BF7\\u8054\\u7CFB\\u4F5C\\u8005\\u83B7\\u5F97\\u6388\\u6743\\uFF0C\\u975E\\u5546\\u4E1A\\u8F6C\\u8F7D\\u8BF7\\u6CE8\\u660E\\u51FA\\u5904\\u3002\\n\")), mdx(\"p\", null, \"Tarjan \\u89E3\\u6CD5\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"// \\u5E76\\u67E5\\u96C6\\u6A21\\u677F\\nclass UnionFind {\\npublic:\\n    vector<int> parent;\\n    vector<int> size;\\n    int n;\\n    // \\u5F53\\u524D\\u8FDE\\u901A\\u5206\\u91CF\\u6570\\u76EE\\n    int setCount;\\n    \\npublic:\\n    UnionFind(int _n): n(_n), setCount(_n), parent(_n), size(_n, 1) {\\n        iota(parent.begin(), parent.end(), 0);\\n    }\\n    \\n    int findset(int x) {\\n        return parent[x] == x ? x : parent[x] = findset(parent[x]);\\n    }\\n    \\n    bool unite(int x, int y) {\\n        x = findset(x);\\n        y = findset(y);\\n        if (x == y) {\\n            return false;\\n        }\\n        if (size[x] < size[y]) {\\n            swap(x, y);\\n        }\\n        parent[y] = x;\\n        size[x] += size[y];\\n        --setCount;\\n        return true;\\n    }\\n    \\n    bool connected(int x, int y) {\\n        x = findset(x);\\n        y = findset(y);\\n        return x == y;\\n    }\\n};\\n\\nclass Solution {\\npublic:\\n    vector<vector<int>> findCriticalAndPseudoCriticalEdges(int n, vector<vector<int>>& edges) {\\n        int m = edges.size();\\n        for (int i = 0; i < m; ++i) {\\n            edges[i].push_back(i);\\n        }\\n        sort(edges.begin(), edges.end(), [](const auto& u, const auto& v) {\\n            return u[2] < v[2];\\n        });\\n\\n        // \\u8BA1\\u7B97 value\\n        UnionFind uf_std(n);\\n        int value = 0;\\n        for (int i = 0; i < m; ++i) {\\n            if (uf_std.unite(edges[i][0], edges[i][1])) {\\n                value += edges[i][2];\\n            }\\n        }\\n\\n        vector<vector<int>> ans(2);\\n        \\n        for (int i = 0; i < m; ++i) {\\n            // \\u5224\\u65AD\\u662F\\u5426\\u662F\\u5173\\u952E\\u8FB9\\n            UnionFind uf(n);\\n            int v = 0;\\n            for (int j = 0; j < m; ++j) {\\n                if (i != j && uf.unite(edges[j][0], edges[j][1])) {\\n                    v += edges[j][2];\\n                }\\n            }\\n            if (uf.setCount != 1 || (uf.setCount == 1 && v > value)) {\\n                ans[0].push_back(edges[i][3]);\\n                continue;\\n            }\\n\\n            // \\u5224\\u65AD\\u662F\\u5426\\u662F\\u4F2A\\u5173\\u952E\\u8FB9\\n            uf = UnionFind(n);\\n            uf.unite(edges[i][0], edges[i][1]);\\n            v = edges[i][2];\\n            for (int j = 0; j < m; ++j) {\\n                if (i != j && uf.unite(edges[j][0], edges[j][1])) {\\n                    v += edges[j][2];\\n                }\\n            }\\n            if (v == value) {\\n                ans[1].push_back(edges[i][3]);\\n            }\\n        }\\n      \\n        return ans;\\n    }\\n};\\n\\n\\u4F5C\\u8005\\uFF1ALeetCode-Solution\\n\\u94FE\\u63A5\\uFF1Ahttps://leetcode-cn.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/solution/zhao-dao-zui-xiao-sheng-cheng-shu-li-de-gu57q/\\n\\u6765\\u6E90\\uFF1A\\u529B\\u6263\\uFF08LeetCode\\uFF09\\n\\u8457\\u4F5C\\u6743\\u5F52\\u4F5C\\u8005\\u6240\\u6709\\u3002\\u5546\\u4E1A\\u8F6C\\u8F7D\\u8BF7\\u8054\\u7CFB\\u4F5C\\u8005\\u83B7\\u5F97\\u6388\\u6743\\uFF0C\\u975E\\u5546\\u4E1A\\u8F6C\\u8F7D\\u8BF7\\u6CE8\\u660E\\u51FA\\u5904\\u3002\\n\")), mdx(\"h2\", {\n    \"id\": \"四、总结\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%9B%9B%E3%80%81%E6%80%BB%E7%BB%93\",\n    \"aria-label\": \"四、总结 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%9B%9B%E3%80%81%E6%80%BB%E7%BB%93\",\n    \"aria-label\": \"四、总结 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u56DB\\u3001\\u603B\\u7ED3\"), mdx(\"p\", null, \"\\u5728\\u65E0\\u5411\\u56FE\\u4E2D\\uFF0C\\u8981\\u5F97\\u5230\\u6700\\u5C0F\\u751F\\u6210\\u6811\\uFF08mst\\uFF09\\uFF0C\\u53EF\\u4F7F\\u7528 Kruska \\u7B97\\u6CD5\\uFF0C\\u5B9E\\u73B0\\u4E0A\\u7684\\u6570\\u636E\\u7ED3\\u6784\\u662F\\u5E76\\u67E5\\u96C6\\u3002\"), mdx(\"p\", null, \"\\u4E8B\\u5B9E\\u4E0A\\uFF0C\\u6D89\\u53CA\\u8FDE\\u901A\\u5206\\u91CF\\u7684\\u6C42\\u89E3\\uFF0C\\u5C31\\u53EF\\u4EE5\\u8003\\u8651\\u4F7F\\u7528\\u5E76\\u67E5\\u96C6\\uFF0C\\u6216\\u8005 DFS\\uFF0C\\u5982\\u679C\\u4E0D\\u9700\\u8981\\u5206\\u6790\\u5177\\u4F53\\u7684\\u8FDE\\u901A\\u5206\\u91CF\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528\\u5E76\\u67E5\\u96C6\\u8F83\\u5FEB\\u5F97\\u5230\\u7ED3\\u679C\\uFF0C\\u5426\\u5219\\u5E94\\u8BE5\\u662F DFS \\u66F4\\u4E3A\\u9002\\u5408\"), mdx(\"h2\", {\n    \"id\": \"更多\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E6%9B%B4%E5%A4%9A\",\n    \"aria-label\": \"更多 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E6%9B%B4%E5%A4%9A\",\n    \"aria-label\": \"更多 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u66F4\\u591A\"), mdx(\"p\", null, \"\\u65E0\\u5411\\u56FEmst\\u7B97\\u6CD5\\uFF08prim\\u6216kruskal\\uFF09\\u662F\\u6709\\u5411\\u56FEmst\\u7B97\\u6CD5\\uFF08edmond/chiu\\uFF09\\nReference: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.coder.work/article/1916754\"\n  }, \"https://www.coder.work/article/1916754\")), mdx(\"p\", null, \"\\u66F4\\u591A\\u56FE\\u8BBA\\u76F8\\u5173\\u9898\\u76EE\\uFF0C\\u53EF\\u4EE5\\u67E5\\u770B\\u539F\\u535A\\u4E3B\\u7684\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.csdn.net/luomingjun12315/article/details/47438607\"\n  }, \"\\u6574\\u7406\"), \"\\n\\u4E2A\\u4EBA\\u66F4\\u591A\\u7B97\\u6CD5\\u603B\\u7ED3\\u5728\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pfan8/LeetCode\"\n  }, \"Github\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"引用说明   本文参考 博客 ，在此基础上进行总结提炼 前言                    给定一个无向图，如果它任意两个顶点都联通并且是一棵树，那么我们就称之为生成树(Spanning Tree…","fields":{"slug":"/old-blogs/2021-01-25-Kruskal (并查集)/"},"frontmatter":{"title":"Kruskal算法","date":"01/25/2021","tags":["Algorithm-Graph"]}}},"pageContext":{"slug":"/old-blogs/2021-01-25-Kruskal (并查集)/","next":{"fields":{"slug":"/old-blogs/2021-03-03-Google OAuth/"},"frontmatter":{"title":"Google OAuth2","tags":["Network-Security-OAuth2","Node-Express","Network-Cookie"],"date":"2021-03-03T00:00:00.000Z","excerpt":null,"draft":null}},"prev":{"fields":{"slug":"/old-blogs/2020-11-20-iTerm2配置/"},"frontmatter":{"title":"iTerm2配置","tags":["Tools-Mac"],"date":"2020-11-20T00:00:00.000Z","excerpt":null,"draft":null}}}},"staticQueryHashes":["1703067421","3649515864","63159454"]}