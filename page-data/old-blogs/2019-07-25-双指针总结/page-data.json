{"componentChunkName":"component---src-components-posts-post-template-index-js","path":"/old-blogs/2019-07-25-双指针总结/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"双指针总结\",\n  \"subtitle\": \"链表问题、快慢指针\",\n  \"date\": \"2019-07-25T00:00:00.000Z\",\n  \"update_date\": \"2019-07-25T00:00:00.000Z\",\n  \"author\": \"pfan8\",\n  \"header-img\": \"img/post-bg-dsa.jpg\",\n  \"catalog\": true,\n  \"tags\": [\"Algorithm-Double Pointer\", \"Algorithm-Conclusion\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"一、相向双指针\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%B8%80%E3%80%81%E7%9B%B8%E5%90%91%E5%8F%8C%E6%8C%87%E9%92%88\",\n    \"aria-label\": \"一、相向双指针 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u4E00\\u3001\\u76F8\\u5411\\u53CC\\u6307\\u9488\"), mdx(\"p\", null, \"\\u4E24\\u6839\\u6307\\u9488\\u4E00\\u5934\\u4E00\\u5C3E\\uFF0C\\u5411\\u4E2D\\u95F4\\u9760\\u62E2\\u76F4\\u5230\\u76F8\\u9047\\uFF0C\\u65F6\\u95F4\\u590D\\u6742\\u5EA6 O(n)\\nTwo Sum \\u7C7B\\uFF1A\\u54C8\\u5E0C\\u8868\\u548C\\u53CC\\u6307\\u9488\\uFF0C\\u53CC\\u6307\\u9488\\u66F4\\u5FEB\\nPartition \\u7C7B\\uFF1A\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"partition\\u6A21\\u677F\"), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"while left <= right:\\n    while left <= right and nums[left] \\u5E94\\u8BE5\\u5728\\u5DE6\\u4FA7:\\n        left +=1 \\n    while left <= right and nums[right] \\u5E94\\u8BE5\\u5728\\u53F3\\u4FA7:\\n        right -=1\\n    if left <= right:\\n        # \\u627E\\u5230\\u4E86\\u4E00\\u4E2A\\u4E0D\\u8BE5\\u5728\\u5DE6\\u4FA7\\u7684\\u4E0D\\u8BE5\\u5728\\u53F3\\u4FA7\\u7684\\uFF0C\\u4EA4\\u6362\\u4ED6\\u4EEC\\n        nums[left], nums[right] = nums[right], nums[left]\\n        left += 1\\n        right -= 1\\n\"))), mdx(\"h2\", {\n    \"id\": \"二、同向双指针\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%BA%8C%E3%80%81%E5%90%8C%E5%90%91%E5%8F%8C%E6%8C%87%E9%92%88\",\n    \"aria-label\": \"二、同向双指针 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u4E8C\\u3001\\u540C\\u5411\\u53CC\\u6307\\u9488\"), mdx(\"p\", null, \" \\u4E24\\u6839\\u6307\\u9488\\u4E00\\u524D\\u4E00\\u540E\\uFF0C\\u76F4\\u5230\\u524D\\u9762\\u7684\\u6307\\u9488\\u8D70\\u8FC7\\u5934\\uFF0C\\u65F6\\u95F4\\u590D\\u6742\\u5EA6 O(n)\"), mdx(\"h2\", {\n    \"id\": \"qa\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#qa\",\n    \"aria-label\": \"qa permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Q&A\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5982\\u679C\\u9700\\u8981\\u4FDD\\u8BC1\\u6700\\u5C11\\u4FEE\\u6539\\u6B21\\u6570\\u5982\\u4F55\\u505A\\uFF1F \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F7F\\u7528 Partition \\u7684\\u65B9\\u6CD5\\u53EF\\u4EE5\\u505A\\u5230\\u4EA4\\u6362\\u6B21\\u6570\\u6700\\u4F18 \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4E0D\\u9700\\u8981\\u7EF4\\u6301\\u76F8\\u5BF9\\u987A\\u5E8F vs \\u9700\\u8981\\u7EF4\\u6301\\u76F8\\u5BF9\\u987A\\u5E8F \\u7B97\\u6CD5\\u6709\\u4EC0\\u4E48\\u533A\\u522B\\uFF1F \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4E0D\\u9700\\u8981\\u7EF4\\u62A4\\u76F8\\u5BF9\\u987A\\u5E8F\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528 Partition \\u7684\\u65B9\\u6CD5\\uFF0C\\u65F6\\u7A7A\\u590D\\u6742\\u5EA6\\u548C\\u4EA4\\u6362\\u6B21\\u6570\\u90FD\\u662F\\u6700\\u4F18\\u7684 \\u9700\\u8981\\u7EF4\\u62A4\\u76F8\\u5BF9\\u987A\\u5E8F\\u7684\\uFF0C\\u53EA\\u80FD\\u4F7F\\u7528\\u540C\\u5411\\u53CC\\u6307\\u9488\\u7684\\u65B9\\u6CD5\\uFF0C\\u65F6\\u7A7A\\u590D\\u6742\\u5EA6\\u6700\\u4F18\\uFF0C\\u4F46\\u662F\\u4EA4\\u6362\\u6B21\\u6570\\u4E0D\\u662F\\u6700\\u4F18 \\u7684\"))), mdx(\"h2\", {\n    \"id\": \"题目\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E9%A2%98%E7%9B%AE\",\n    \"aria-label\": \"题目 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u9898\\u76EE\"), mdx(\"h3\", {\n    \"id\": \"16-3sum\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#16-3sum\",\n    \"aria-label\": \"16 3sum permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://leetcode.com/problems/3sum\"\n  }, \"16. 3sum\")), mdx(\"p\", null, \"3\\u4E2A\\u6570\\u76F8\\u52A0\\u4E3A0\\uFF0C\\u5FAA\\u73AF\\u7B2C\\u4E00\\u4E2A\\u6570\\uFF0C\\u540E\\u9762\\u4E24\\u4E2A\\u6570\\u7528\\u76F8\\u5411\\u53CC\\u6307\\u9488\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(n^2)\"), \"\\uFF0C\\u7B2C\\u4E00\\u4E2A\\u6570\\u5FAA\\u73AF\\uFF0Ck,j\\u4F1A\\u904D\\u5386\\u5269\\u4E0B\\u7684\\u6570\\uFF0C\\u76F8\\u5F53\\u4E8E2\\u5C42\\u5FAA\\u73AF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(n^3)\"), \"\\uFF0C\\u7ED3\\u679C\\u5B58\\u50A8\\u6700\\u591A\\u9700\\u8981\\u7684\\u7A7A\\u95F4\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"class Solution {\\nprivate:\\n    void quicksort(vector<int>& nums, int left, int right) {\\n        if(right <= left) return;\\n        int begin = left;\\n        int end = right;\\n        int pivot = rand() % (right+1-left) + left;\\n        swap(nums[pivot], nums[right]);\\n        pivot = right--;\\n        while(right > left) {\\n            if(nums[left] <= nums[pivot]) {\\n                left++;\\n                continue;\\n            }\\n            if(nums[right] >= nums[pivot]) {\\n                right--;\\n                continue;\\n            }\\n            swap(nums[left++], nums[right]);\\n        }\\n        if(nums[left] < nums[pivot]) left++;\\n        swap(nums[pivot], nums[left]);\\n        quicksort(nums, begin, left-1);\\n        quicksort(nums, left+1, end);\\n    }\\npublic:\\n    vector<vector<int>> threeSum(vector<int>& nums) {\\n        vector<vector<int>> res;\\n        if(nums.size() < 3) return res;\\n        quicksort(nums, 0, nums.size()-1);\\n        for(int i = 0; i < nums.size()-2; i++) {\\n            if(i && nums[i] == nums[i-1]) continue;\\n            int j = i+1;\\n            int k = nums.size()-1;\\n            while(k > j) {\\n                if(nums[i]+nums[j]+nums[k] < 0) {\\n                    j++;\\n                    continue;\\n                }\\n                if(nums[i]+nums[j]+nums[k] > 0) {\\n                    k--;\\n                    continue;\\n                }\\n                res.push_back({nums[i], nums[j], nums[k]});\\n                while(nums[j]==nums[++j] && k > j) continue;\\n                while(nums[k]==nums[--k] && k > j) continue;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n\")), mdx(\"h3\", {\n    \"id\": \"153find-minimum-in-rotated-sorted-array\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#153find-minimum-in-rotated-sorted-array\",\n    \"aria-label\": \"153find minimum in rotated sorted array permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/\"\n  }, \"153.Find Minimum in Rotated Sorted Array\")), mdx(\"p\", null, \"\\u67E5\\u627E\\u6700\\u5C0F\\u6570\\uFF0C\\u6570\\u7EC4\\u662F\\u5DF2\\u6392\\u5E8F\\u7684\\uFF0C\\u53EA\\u662F\\u7FFB\\u8F6C\\u4E86\\u4E00\\u4E2A\\u4F4D\\u7F6E\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528\\u76F8\\u5411\\u53CC\\u6307\\u9488\\u505A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(n)\"), \"\\uFF0C\\u904D\\u5386\\u4E00\\u904D\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(n)\"), \"\\uFF0C\\u6570\\u7EC4\\u5927\\u5C0F\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"class Solution {\\npublic:\\n    int findMin(vector<int>& nums) {\\n        int left = 0;\\n        int right = nums.size()-1;\\n        if(nums[right] >= nums[left]) return nums[left];\\n        while(right > left) {\\n            if(nums[--right] >= nums[left]) return nums[++right];\\n        }\\n        return -1;\\n    }\\n};\\n\")), mdx(\"h3\", {\n    \"id\": \"16-3sum-closet\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#16-3sum-closet\",\n    \"aria-label\": \"16 3sum closet permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://leetcode.com/problems/3sum-closest/submissions/\"\n  }, \"16. 3Sum Closet\")), mdx(\"p\", null, \"\\u548C3Sum\\u7C7B\\u4F3C\\uFF0C\\u4F46\\u662F\\u8981\\u7528\\u53D8\\u91CF\\u5B58\\u50A8\\u6700\\u5C0F\\u503C\\uFF0C\\u6BCF\\u6B21\\u6BD4\\u8F83\\u5927\\u5C0F\\uFF0C\\u66F4\\u65B0\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(n^2)\"), \"\\uFF0C\\u7B2C\\u4E00\\u4E2A\\u6570\\u5FAA\\u73AF\\uFF0Ck,j\\u4F1A\\u904D\\u5386\\u5269\\u4E0B\\u7684\\u6570\\uFF0C\\u76F8\\u5F53\\u4E8E2\\u5C42\\u5FAA\\u73AF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(n)\"), \"\\uFF0Cnums\\u5B58\\u50A8\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"class Solution {\\nprivate:\\n    void quicksort(vector<int>& nums, int left, int right) {\\n        if(right <= left) return;\\n        int begin = left;\\n        int end = right;\\n        int pivot = rand() % (right+1-left) + left;\\n        swap(nums[pivot], nums[right]);\\n        pivot = right--;\\n        while(right > left) {\\n            if(nums[left] <= nums[pivot]) {\\n                left++;\\n                continue;\\n            }\\n            if(nums[right] >= nums[pivot]) {\\n                right--;\\n                continue;\\n            }\\n            swap(nums[left++], nums[right]);\\n        }\\n        if(nums[left] < nums[pivot]) left++;\\n        swap(nums[pivot], nums[left]);\\n        quicksort(nums, begin, left-1);\\n        quicksort(nums, left+1, end);\\n    }\\npublic:\\n    int threeSumClosest(vector<int>& nums, int target) {\\n        auto size = nums.size();\\n        if(size < 3) return -1;\\n        quicksort(nums, 0, size-1);\\n        int res = nums[0]+nums[1]+nums[2];\\n        int distance = abs(res-target);\\n        int sum;\\n        for(int i = 0; i < size-2; i++) {\\n            if(i && nums[i]==nums[i-1]) continue;\\n            int j = i+1;\\n            int k = size-1;\\n            while(k > j) {\\n                sum = nums[i] + nums[j] + nums[k];\\n                if(abs(sum-target) < distance) {\\n                    distance = abs(sum-target);\\n                    res = sum;    \\n                }\\n                if(sum <= target) {\\n                    j++;\\n                } else if(sum > target) {\\n                    k--;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};\\n\")), mdx(\"h3\", {\n    \"id\": \"19-remove-nth-node-from-end-of-list\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#19-remove-nth-node-from-end-of-list\",\n    \"aria-label\": \"19 remove nth node from end of list permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://leetcode.com/problems/remove-nth-node-from-end-of-list/\"\n  }, \"19. Remove Nth Node From End of List\")), mdx(\"p\", null, \"\\u8981\\u6C42\\u5220\\u9664\\u5012\\u6570\\u7B2Cn\\u4E2A\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528\\u5FEB\\u6162\\u6307\\u9488\\uFF08\\u540C\\u5411\\u53CC\\u6307\\u9488\\uFF09\\uFF0Cfast\\u8D70n\\u6B212\\u6B65\\uFF0C\\u5982\\u679C\\u8FD8\\u6CA1\\u5230\\u7EC8\\u70B9\\uFF0C\\u5C31\\u548Cslow\\u4E00\\u6837\\u6BCF\\u6B21\\u8D70\\u4E00\\u6B65\\uFF0C\\u5230\\u8FBE\\u7EC8\\u70B9\\uFF0C\\u5220\\u9664slow\\u7684next\\u8282\\u70B9\\u5373\\u53EF\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\uFF1AO(n)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\uFF1AO(1)\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"/**\\n * Definition for singly-linked list.\\n * struct ListNode {\\n *     int val;\\n *     ListNode *next;\\n *     ListNode(int x) : val(x), next(NULL) {}\\n * };\\n */\\nclass Solution {\\npublic:\\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\\n        ListNode* dummy = new ListNode(0);\\n        dummy->next = head;\\n        ListNode* fast = dummy;\\n        ListNode* slow = dummy;\\n        while(n) {\\n            fast = fast->next;\\n            n--;\\n        }\\n        while(fast->next) {\\n            fast = fast->next;\\n            slow = slow->next;\\n        }\\n        slow->next = slow->next->next;\\n        return dummy->next;\\n    }\\n};\\n\")), mdx(\"h3\", {\n    \"id\": \"141-linked-list-cycle\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#141-linked-list-cycle\",\n    \"aria-label\": \"141 linked list cycle permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://leetcode.com/problems/linked-list-cycle/\"\n  }, \"141. Linked List Cycle\")), mdx(\"p\", null, \"\\u7528\\u5FEB\\u6162\\u6307\\u9488\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(n)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(1)\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"/**\\n * Definition for singly-linked list.\\n * struct ListNode {\\n *     int val;\\n *     ListNode *next;\\n *     ListNode(int x) : val(x), next(NULL) {}\\n * };\\n */\\nclass Solution {\\npublic:\\n    bool hasCycle(ListNode *head) {\\n        if(!head || !head->next) return false;\\n        ListNode* slow = head;\\n        ListNode* fast = head->next;\\n        while(fast != slow) {\\n            if(!fast || !fast->next) return false;\\n            slow = slow->next;\\n            fast = fast->next->next;\\n        }\\n        return true;\\n    }\\n};\\n\")), mdx(\"h3\", {\n    \"id\": \"287-find-the-duplicate-number\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#287-find-the-duplicate-number\",\n    \"aria-label\": \"287 find the duplicate number permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://leetcode.com/problems/find-the-duplicate-number/\"\n  }, \"287. Find the Duplicate Number\")), mdx(\"p\", null, \"\\u4F7F\\u7528\\u5FEB\\u6162\\u6307\\u9488\\uFF0C\\u56E0\\u4E3A\\u603B\\u5171\\u6709n+1\\u4E2A\\u6570\\uFF0C\\u4F46\\u662F\\u6570\\u5B57\\u662F1\\u5230n\\u7684\\uFF0C\\u5177\\u4F53\\u8BC1\\u660E\\u89C1\\u53E6\\u4E00\\u7BC7\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pfan8/LeetCode/blob/master/%E6%9F%A5%E6%89%BE/287.find-the-duplicate-number/%E6%80%BB%E7%BB%93.md\"\n  }, \"\\u603B\\u7ED3\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(n)\"), \"\\uFF0Cslow\\u6307\\u9488\\u6700\\u591A\\u8D70n-1\\u6B21\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\uFF1A\", mdx(\"span\", {\n    parentName: \"li\",\n    \"className\": \"inlineMath\"\n  }, \"O(1)\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++\"\n  }, \"class Solution {\\npublic:\\n    int findDuplicate(vector<int>& nums) {\\n        int i = nums[nums[0]];\\n        int j = nums[0];\\n        while(i != j) {\\n            i = nums[nums[i]];\\n            j = nums[j];\\n        }\\n        i = 0;\\n        while(i != j) {\\n            i = nums[i];\\n            j = nums[j];\\n        }\\n        return i;\\n    }\\n};\\n\")), mdx(\"h1\", {\n    \"id\": \"更多\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#%E6%9B%B4%E5%A4%9A\",\n    \"aria-label\": \"更多 permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u66F4\\u591A\"), mdx(\"p\", null, \"\\u4E2A\\u4EBA\\u66F4\\u591A\\u7B97\\u6CD5\\u603B\\u7ED3\\u5728\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pfan8/LeetCode\"\n  }, \"Github\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"一、相向双指针 两根指针一头一尾，向中间靠拢直到相遇，时间复杂度 O(n)\nTwo Sum 类：哈希表和双指针，双指针更快\nPartition 类： partition模板 二、同向双指针  两根指针一前一后，直到前面的指针走过头，时间复杂度 O(n) Q&A…","fields":{"slug":"/old-blogs/2019-07-25-双指针总结/"},"frontmatter":{"title":"双指针总结","date":"07/25/2019","tags":["Algorithm-Double Pointer","Algorithm-Conclusion"]}}},"pageContext":{"slug":"/old-blogs/2019-07-25-双指针总结/","next":{"fields":{"slug":"/old-blogs/2019-07-25-位运算总结/"},"frontmatter":{"title":"位运算总结","tags":["Algorithm-Bit Operation"],"date":"2019-07-25T00:00:00.000Z","excerpt":null,"draft":null}},"prev":{"fields":{"slug":"/old-blogs/2019-07-24-STL总结/"},"frontmatter":{"title":"STL总结","tags":["Algorithm","C++-STL"],"date":"2019-07-24T00:00:00.000Z","excerpt":null,"draft":null}}}},"staticQueryHashes":["1703067421","3649515864","63159454"]}